{"version":3,"sources":["webpack:///./node_modules/semantic-ui-react/dist/es/elements/Container/Container.js","webpack:///./src/layouts/index.tsx","webpack:///./src/pages/index.mdx"],"names":["Container","props","children","className","content","fluid","text","textAlign","classes","rest","getUnhandledProps","ElementType","getElementType","createElement","isNil","handledProps","components","code","Highlighted","Layout","style","paddingTop","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","mdxType","parentName","WithUser","isMDXComponent"],"mappings":"wWAQA,SAASA,EAAUC,GACjB,IAAIC,EAAWD,EAAMC,SACjBC,EAAYF,EAAME,UAClBC,EAAUH,EAAMG,QAChBC,EAAQJ,EAAMI,MACdC,EAAOL,EAAMK,KACbC,EAAYN,EAAMM,UAClBC,EAAU,IAAG,KAAM,YAAWF,EAAM,QAAS,YAAWD,EAAO,SAAU,YAAiBE,GAAY,YAAaJ,GACnHM,EAAO,OAAAC,EAAA,GAAkBV,EAAWC,GACpCU,EAAc,OAAAC,EAAA,GAAeZ,EAAWC,GAC5C,OAAO,IAAMY,cAAcF,EAAa,IAAS,GAAIF,EAAM,CACzDN,UAAWK,IACT,IAAcM,MAAMZ,GAAYE,EAAUF,GAGhDF,EAAUe,aAAe,CAAC,KAAM,WAAY,YAAa,UAAW,QAAS,OAAQ,aACtE,Q,YCjBTC,EAAa,CACjBC,KAAMC,KAUOC,EARU,SAAC,GAAD,IAAGjB,EAAH,EAAGA,SAAH,OACvB,kBAAC,EAAD,CAAWI,MAAI,EAACc,MAAO,CAAEC,WAAY,KACnC,kBAAC,IAAD,CAAaL,WAAYA,GAAad,K,YCJnC,IAAMoB,EAAe,GAOtBC,EAAc,CAClBD,gBAEIE,EAAYC,EACH,SAASC,EAAT,GAGZ,IAFDV,EAEC,EAFDA,WACGf,E,oIACF,mBACD,OAAO,YAACuB,EAAD,iBAAeD,EAAiBtB,EAAhC,CAAuCe,WAAYA,EAAYW,QAAQ,cAI5E,sBAAI,0BAAYC,WAAW,MAAvB,8BACJ,YAAC,IAAD,CAAMD,QAAQ,QACZ,qDAAoC,+BAAGC,WAAW,KAAQ,CACtD,KAAQ,+DADwB,kBAApC,MAIF,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,sCAIL,6BACA,kCAAiB,+BAAGA,WAAW,KAAQ,CACnC,KAAQ,0DADK,sBAAjB,KAGA,8BACA,4LAEA,YAAC,IAAD,CAAaD,QAAQ,gBACrB,YAACE,EAAA,EAAD,CAAUF,QAAQ,cAKtBD,EAAWI,gBAAiB","file":"component---src-pages-index-mdx-f94b6cf83c5bece66649.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useTextAlignProp } from '../../lib';\n/**\n * A container limits content to a maximum width.\n */\n\nfunction Container(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      fluid = props.fluid,\n      text = props.text,\n      textAlign = props.textAlign;\n  var classes = cx('ui', useKeyOnly(text, 'text'), useKeyOnly(fluid, 'fluid'), useTextAlignProp(textAlign), 'container', className);\n  var rest = getUnhandledProps(Container, props);\n  var ElementType = getElementType(Container, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nContainer.handledProps = [\"as\", \"children\", \"className\", \"content\", \"fluid\", \"text\", \"textAlign\"];\nexport default Container;","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport { Container } from \"semantic-ui-react\"\nimport { MDXProvider } from \"@mdx-js/react\"\n\nimport { Highlighted } from \"@cs125/semantic-ui\"\nconst components = {\n  code: Highlighted,\n}\nconst Layout: React.FC = ({ children }) => (\n  <Container text style={{ paddingTop: 16 }}>\n    <MDXProvider components={components}>{children}</MDXProvider>\n  </Container>\n)\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\nexport default Layout\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/challen/code/react-google-login/example/src/layouts/index.tsx\";\nimport { LoginButton, Lead } from \"@cs125/semantic-ui\";\nimport { WithUser } from \"@components/WithUser\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1><inlineCode parentName=\"h1\">{`@cs125/react-google-login`}</inlineCode></h1>\n    <Lead mdxType=\"Lead\">\n      <p>{`React Typescript support for `}<a parentName=\"p\" {...{\n          \"href\": \"https://developers.google.com/identity/sign-in/web/sign-in\"\n        }}>{`Google Sign-in`}</a>{`.`}</p>\n    </Lead>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`npm i @cs125/react-google-login\n`}</code></pre>\n    <h2>{`Use`}</h2>\n    <p>{`Visit the `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/cs125-illinois/react-google-login/\"\n      }}>{`documentation here`}</a>{`.`}</p>\n    <h2>{`Demo`}</h2>\n    <p>{`The login button below will open the standard Google Sign-in dialog.\nOnce you are signed in, your name, email address, photo, and a login token will be displayed.`}</p>\n    <LoginButton mdxType=\"LoginButton\" />\n    <WithUser mdxType=\"WithUser\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}